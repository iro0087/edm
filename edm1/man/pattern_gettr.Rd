% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_fun.R
\name{pattern_gettr}
\alias{pattern_gettr}
\title{pattern_gettr}
\usage{
pattern_gettr(word_, vct, occ = c(1), strict, btwn, all_in_word = "no")
}
\arguments{
\item{word_}{is the vector containing the patterns}

\item{vct}{is the vector being searched for patterns}

\item{occ}{a vector containing the occurence of the pattern in word_ to be matched in the vector being searched, if the occurence is 2 for the nth pattern in word_ and only one occurence is found in vct so no pattern will be matched}

\item{strict}{a vector containing the "strict" condition for each nth vector in word_ ("strict" is the string to activate this option)}

\item{btwn}{is a vector containing the condition ("yes" to activate this option) meaning that if "yes", all elements between two matched patern in vct will be returned}

\item{all_in_word}{is a value (default set to "no", "yes" to activate this option) that, if activated, won't authorized a previous matched pattern to be matched again}
}
\description{
Search for pattern(s) contained in a vector in another vector and return matched one and their position according to these rules:
}
\details{
First case: Search for patterns strictly, it means that the searched pattern(s) will be matched only if the patterns containded in the vector that is beeing explored by the function are present like this c("pattern_searched", "other", ..., "pattern_searched") and not as c("other_thing pattern_searched other_thing", "other", ..., "pattern_searched other_thing")
Second case: It is the opposite to the first case, it means that if the pattern is partially present like in the first position and the last, it will be considered like a matched pattern
}
